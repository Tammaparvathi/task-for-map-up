import polyline
import pandas as pd
from math import radians, sin, cos, sqrt, atan2

# Haversine function to calculate distance between two points
def haversine(lat1, lon1, lat2, lon2):
    R = 6371000  # Earth radius in meters
    phi1, phi2 = radians(lat1), radians(lat2)
    delta_phi = radians(lat2 - lat1)
    delta_lambda = radians(lon2 - lon1)

    a = sin(delta_phi / 2)**2 + cos(phi1) * cos(phi2) * sin(delta_lambda / 2)**2
    c = 2 * atan2(sqrt(a), sqrt(1 - a))
    return R * c

# Function to decode polyline and create DataFrame
def decode_polyline_to_df(polyline_str):
    # Decode polyline
    coordinates = polyline.decode(polyline_str)
    
    # Create DataFrame
    df = pd.DataFrame(coordinates, columns=["latitude", "longitude"])
    
    # Calculate distance
    distances = [0]  # First point has a distance of 0
    for i in range(1, len(coordinates)):
        lat1, lon1 = coordinates[i - 1]
        lat2, lon2 = coordinates[i]
        distance = haversine(lat1, lon1, lat2, lon2)
        distances.append(distance)
    
    # Add distances to DataFrame
    df["distance"] = distances
    return df

# Example usage
polyline_str = "gfo}EtohhU_s|@~cnf@fkpCzspL"
df = decode_polyline_to_df(polyline_str)
print(df)

#Output
#The function returns a DataFrame similar to this:
   #latitude  longitude     distance
0  38.5      -120.2          0.0
1  40.7      -120.95       247800.7
2  43.252    -126.453     640012.3
...
